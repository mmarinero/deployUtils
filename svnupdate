#!/bin/bash

set -euo pipefail

function show_help {
local SCRIPT_NAME=$(basename "$0")
cat <<EOF
Usage: $SCRIPT_NAME [options] -s server
Updates a remote svn working copy SERVER_PATHectory showing a diff and asking for confirmation.

-h --help				shows this help message.
-y --skip-confirm 		option executes svn up without confirmation
-s --ssh-connection		ssh server login string, ie: example@example.com
-p --server-path 		path to the SERVER_PATH directory where the update will take place
-q --quiet				print only essential information and errors
EOF
}

#default options
declare SSH_CONNECTION=''
declare SERVER_PATH=''
declare CONFIRM=true
declare NOQUIET=true
declare QUIET_OPTION=''

while [ "$#" -gt 0 ]
do
	case "$1" in
	-h|--help)
		show_help
		exit 0
		;;
	-y|--skip-confirm)
		CONFIRM=false
		;;
	-s|--ssh-connection)
		SSH_CONNECTION=$2
		shift
		;;
	-p|--server-path)
		SERVER_PATH=$2
		shift
		;;
	-q|--quiet)
		NOQUIET=false
		QUIET_OPTION='-q'
		;;
	*)
		>&2 echo "Invalid option '$1'. Use --help to see the valid options"
		exit 1
		;;
	esac
	shift
done

if [ -z "$SSH_CONNECTION" ]; then
	>&2 echo "The -s option is mandatory, use --help to see the available options"
	exit 1
fi

readonly STCOMMAND="svn st -u \"$SERVER_PATH\""
readonly UPCOMMAND="svn up $QUIET_OPTION \"$SERVER_PATH\""

REPLY=false
if [ $CONFIRM = true ]; then
	$NOQUIET && echo 'ssh "'"$SSH_CONNECTION"'" -t "'"$STCOMMAND"'"'
	ssh "$SSH_CONNECTION" -t $STCOMMAND
	read -p "Are you sure? [y]" -n 1 -r
	echo
fi

if [ $CONFIRM = false ] || [[ $REPLY =~ ^[y]$ ]]; then
	$NOQUIET && echo 'ssh "'"$SSH_CONNECTION"'" -t "'"$UPCOMMAND"'"'
	$NOQUIET && ssh "$SSH_CONNECTION" -t $UPCOMMAND
	$NOQUIET && echo 'Update completed'
fi
